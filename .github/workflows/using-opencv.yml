name: Build Using Opencv Applications
on:
  push:
     paths:
      - 'using-opencv/**'
      - '.github/workflows/using-opencv.yml'
jobs:
  build:

    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
      #- uses: actions/checkout@master
      # this will enable shellCheck to be performed
      # on every push to the repo.
    #- name: Run ShellCheck
      #uses: ludeeus/action-shellcheck@master
      # If shellCheck complains about unnecessery things, ignore it.
      #env:
        #SHELLCHECK_OPTS: -e SC2153 -e SC2148
    
    # Build Send event application
    - name: Build using-opencv application
      run: |    
        cd using-opencv
        ./build.sh my-opencv-app
        cd ..
        mkdir -p acap3/examples/using-opencv/build
        cp using-opencv/build/opencv_example_1_0_0_armv7hf.eap acap3/examples/using-opencv/build/opencv_example_1_0_0_armv7hf.eap
  
    - name: Run functional tests
      run: |
         export WORKSPACE=$(pwd)
         echo $WORKSPACE
         git clone "https://${{ secrets.GERRIT_USER }}:${{ secrets.GERRIT_PASS }}@gittools.se.axis.com/gerrit/a/tests/atf/tart/recap"
         cd recap  
         git fetch ssh://mirzam@gittools.se.axis.com:29418/tests/atf/tart/recap refs/changes/29/583829/2 && git cherry-pick FETCH_HEAD    
         export ATF_PYTHON=python3     
         ATF_INSTALL=yes source /github-runner/github-runner/init/atf_init.sh
         python --version 
         chmod +x test_starter.sh
         ./test_starter.sh using_opencv
         

    # Save functional test report as artifact
    - uses: actions/upload-artifact@master
      with:
        name: Test report 
        path: recap/recap/output/report.xml 
